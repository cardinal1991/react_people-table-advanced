{"version":3,"sources":["components/Navbar.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","utils/searchHelper.ts","components/SearchLink.tsx","components/OrderControl.tsx","components/PeopleTable.tsx","components/CenturyFilter.tsx","components/PeopleFilters.tsx","components/useFilters.ts","components/PeoplePage.tsx","components/Home.tsx","components/PageNotFound.tsx","App.tsx","index.tsx"],"names":["Navbar","className","role","to","isActive","isPending","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","name","toLowerCase","replace","born","toString","sex","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","search","OrderControl","sortBy","sortOrder","get","currentSortBy","nextSortOrder","getSearchParms","cn","PeopleTable","people","useState","isClicked","setIsClicked","location","useLocation","names","map","mother","find","p","motherName","father","fatherName","pathname","onClick","e","preventDefault","onKeyDown","tabIndex","died","includes","href","CenturyFilter","getCenturiesParams","century","currentCenturies","getAll","filter","v","String","centuries","PeopleFilters","setSearchParams","query","type","placeholder","onChange","event","target","SortBy","CategoriesToSortBy","People","setPeople","isError","setIsError","Query","ShowAllMaleF","SexToShow","Centuries","useEffect","getPeople","res","catch","error","filteredPeople","AllMaleFemale","sort","order","sortedPeople","filterCondition","loweredQuery","length","Math","ceil","personA","personB","Name","localeCompare","Sex","Born","Died","reverse","useFilters","undefined","Home","NotFound","App","path","index","element","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.578fbd0b.chunk.js","sourcesContent":["/* eslint-disable no-nested-ternary */\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar: React.FC = () => {\n  return (\n    <nav\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n      data-cy=\"nav\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive, isPending }) => (\n              isPending ? 'navbar-item' : isActive\n                ? 'navbar-item has-background-grey-lighter' : 'navbar-item')}\n          >\n            Home\n          </NavLink>\n          <NavLink\n            to=\"/people\"\n            className={({ isActive, isPending }) => (\n              isPending ? 'navbar-item' : isActive\n                ? 'navbar-item has-background-grey-lighter' : 'navbar-item')}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","/* eslint-disable prefer-template */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ninterface PersonLinkProps {\n  person: Person;\n}\n\nexport const PersonLink: React.FC<PersonLinkProps> = ({ person }) => {\n  const slug = person.name.toLowerCase().replace(/ /g, '-')\n   + '-' + person.born.toString();\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={person.sex === 'f' ? 'has-text-danger' : ''}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { SearchLink } from './SearchLink';\n\ntype OrderControlProps = {\n  sortBy: string;\n};\n\nexport const OrderControl = ({ sortBy }: OrderControlProps) => {\n  const [searchParams] = useSearchParams();\n\n  const getSearchParms = () => {\n    const sortOrder = searchParams.get('sortOrder');\n    const currentSortBy = searchParams.get('sortBy');\n\n    let nextSortOrder = null;\n\n    if (!sortBy || !sortOrder || currentSortBy !== sortBy) {\n      nextSortOrder = 'ASC';\n    } else if (sortOrder === 'ASC') {\n      nextSortOrder = 'DESC';\n    }\n\n    return { sortBy: nextSortOrder ? sortBy : null, sortOrder: nextSortOrder };\n  };\n\n  return (\n    <SearchLink params={getSearchParms()}>\n      <span className=\"icon\">\n        <i\n          className={cn('fas', {\n            'fa-sort': (searchParams.get('sortOrder') === null),\n            'fa-sort-up': (searchParams.get('sortOrder') === 'ASC')\n              && (searchParams.get('sortBy') === sortBy),\n            'fa-sort-down': (searchParams.get('sortOrder') === 'DESC')\n              && (searchParams.get('sortBy') === sortBy),\n          })}\n        />\n      </span>\n    </SearchLink>\n  );\n};\n","import { useState } from 'react';\n// eslint-disable-next-line max-len\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\nimport { OrderControl } from './OrderControl';\n\ntype Props = {\n  people: Person[] | undefined,\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const [isClicked, setIsClicked] = useState<string | null>('');\n  const [searchParams] = useSearchParams();\n\n  const location = useLocation();\n\n  const names = people?.map((person) => person.name);\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Name\n              <OrderControl\n                sortBy=\"name\"\n              />\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Sex\n              <OrderControl\n                sortBy=\"sex\"\n              />\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Born\n              <OrderControl\n                sortBy=\"born\"\n              />\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Died\n              <OrderControl\n                sortBy=\"died\"\n              />\n            </span>\n          </th>\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people?.map((person) => {\n          const mother = people\n            .find(p => p.name === person.motherName);\n\n          const father = people\n            .find(p => p.name === person.fatherName);\n\n          const slug = `${person.name.toLowerCase().replace(/ /g, '-')}-${person.born.toString()}`;\n\n          return (\n            <tr\n              data-cy=\"person\"\n              className={(isClicked === person.name\n                  || location.pathname === `/people/${slug}`\n                  || location.pathname === `/people/${slug}?${searchParams.toString()}`)\n                ? 'has-background-warning' : ''}\n            >\n              <td>\n                <span\n                  onClick={(e) => {\n                    e.preventDefault();\n                    setIsClicked(person.name);\n                  }}\n                  onKeyDown={(e) => {\n                    if (e.key === 'Enter') {\n                      e.preventDefault();\n                      setIsClicked(person.name);\n                    }\n                  }}\n                  role=\"button\"\n                  tabIndex={0}\n                >\n                  <PersonLink person={person} />\n                </span>\n              </td>\n\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td>\n                {person.motherName\n                  && names?.includes(person.motherName) && (\n                  <a\n                    href={`#/people/${mother?.slug}`}\n                    className=\"has-text-danger\"\n                    onClick={() => {\n                      setIsClicked(person?.motherName);\n                    }}\n                  >\n                    {person.motherName}\n                  </a>\n                )}\n                {person.motherName\n                  && !names?.includes(person.motherName) && (\n                  <>\n                    {person.motherName}\n                  </>\n                )}\n                {!person.motherName && (\n                  <>\n                    -\n                  </>\n                )}\n\n              </td>\n              <td>\n                {person.fatherName\n                  && names?.includes(person.fatherName) && (\n                  <a\n                    href={`#/people/${father?.slug}`}\n                    className=\" \"\n                    onClick={() => {\n                      setIsClicked(person?.fatherName);\n                    }}\n                  >\n                    {person.fatherName}\n                  </a>\n                )}\n                {person.fatherName\n                  && !names?.includes(person.fatherName) && (\n                  <>\n                    {person.fatherName}\n                  </>\n                )}\n                {!person.fatherName && (\n                  <>\n                    -\n                  </>\n                )}\n\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { SearchLink } from './SearchLink';\n\nexport const CenturyFilter = () => {\n  const [searchParams] = useSearchParams();\n\n  const getCenturiesParams = (century: string) => {\n    const currentCenturies = searchParams.getAll('centuries');\n\n    return currentCenturies.includes(century)\n      ? currentCenturies.filter((v) => v !== century)\n      : [String(century), ...searchParams.getAll('centuries')];\n  };\n\n  return (\n    <div className=\"panel-block\">\n      <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n        <div className=\"level-left\">\n          {[16, 17, 18, 19, 20].map((century) => (\n            <SearchLink\n              key={century}\n              data-cy=\"century\"\n              className={cn('button mr-1', {\n                // eslint-disable-next-line max-len\n                'is-info': searchParams.getAll('centuries').includes(century.toString()),\n              })}\n              params={{ centuries: getCenturiesParams(String(century)) }}\n            >\n              {century}\n            </SearchLink>\n          ))}\n        </div>\n\n        <div className=\"level-right ml-4\">\n          <SearchLink\n            data-cy=\"centuryALL\"\n            className=\"button is-success is-outlined\"\n            params={{ centuries: null }}\n          >\n            All\n          </SearchLink>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { SearchLink } from './SearchLink';\nimport { CenturyFilter } from './CenturyFilter';\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query' || '');\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    searchParams.set('query', event.target.value); // setSearchParams({query: event.target.value})\n    setSearchParams(searchParams);\n  }\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          className={cn(' ', {\n            'is-active': (searchParams.get('sex') === null),\n          })}\n          params={{ sex: null }}\n        >\n          All\n        </SearchLink>\n        <SearchLink\n          params={{ sex: 'm' }}\n          className={cn(' ', {\n            'is-active': (searchParams.get('sex') === 'm'),\n          })}\n        >\n          Male\n        </SearchLink>\n        <SearchLink\n          params={{ sex: 'f' }}\n          className={cn(' ', {\n            'is-active': (searchParams.get('sex') === 'f'),\n          })}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query ?? ''}\n            onChange={onChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n      <CenturyFilter />\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={{ query: null, centuries: null, sex: null }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import { Person } from '../types';\n\nexport enum SortBy {\n  Name = 'name',\n  Sex = 'sex',\n  Born = 'born',\n  Died = 'died',\n}\n\nexport function useFilters(\n  AllMaleFemale: 'm' | 'f' | null,\n  query: string,\n  centuries: string[],\n  sort: string,\n  order: string,\n  people: Person[] | undefined,\n) {\n  const sortedPeople = people?.filter(({\n    sex,\n    name,\n    born,\n    motherName,\n    fatherName,\n  }) => {\n    // wejsciowo pokazujemy wszystko wiec filtr zwraca wszystko\n    let filterCondition = true;\n\n    // jezeli ograniczymy zbior przyciskiem all male female\n    // to zwrócimy tylko co bedzie  zgodne z zadanym sex(m/f/null)\n\n    if (AllMaleFemale) {\n      filterCondition = sex === AllMaleFemale;\n    }\n    // query do filtrowania po name, motherName i fatherName\n    // pokazemy tylko to co zawiera naszeQuery\n\n    if (query) {\n      const loweredQuery = query.toLowerCase();\n\n      filterCondition = filterCondition\n        && (name.toLowerCase().includes(loweredQuery)\n          || (motherName?.toLowerCase().includes(loweredQuery) || false)\n          || (fatherName?.toLowerCase().includes(loweredQuery) || false));\n    }\n    // jezeli jest jakis wiek w tablicy to dopisujemy warunek ze\n    // nasze 'borny' po zaokragleniu do wieku beda zawarte w tablicy wiekow\n\n    if (centuries.length) {\n      filterCondition = filterCondition\n        && centuries.includes(`${Math.ceil(born / 100)}`);\n    }\n\n    return filterCondition;\n  });\n\n  // ustawiamy to po czym sortujemy na wyniku funkcji strzałkowej(zbiorze tego co widzimy),\n  // wartosci z enuma SortBy:name,sex,born,died\n\n  if (sort) {\n    sortedPeople?.sort((personA, personB) => {\n      switch (sort) {\n        case SortBy.Name:\n          return personA.name.localeCompare(personB.name);\n        case SortBy.Sex:\n          return personA.sex.localeCompare(personB.sex);\n        case SortBy.Born:\n          return personA.born - personB.born;\n        case SortBy.Died:\n          return personA.died - personB.died;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  // Asc i Desc\n\n  if (order === 'DESC') {\n    sortedPeople?.reverse();\n  }\n\n  if (order === 'ASC') {\n    (sortedPeople?.reverse())?.reverse();\n  }\n\n  return sortedPeople;\n}\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getPeople } from '../api';\nimport { Loader } from './Loader';\nimport { Person } from '../types';\nimport { PeopleTable } from './PeopleTable';\nimport { PeopleFilters } from './PeopleFilters';\nimport { useFilters } from './useFilters';\n\nexport enum CategoriesToSortBy {\n  SexToShow = 'sex',\n  Query = 'query',\n  Centuries = 'centuries',\n  sortBy = 'sortBy',\n  sortOrder = 'sortOrder',\n}\n\nexport const People: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>();\n  const [isError, setIsError] = useState<string | null>(null);\n  const [searchParams] = useSearchParams();\n\n  const query = searchParams.get(CategoriesToSortBy.Query) || '';\n  const ShowAllMaleF = searchParams.get(CategoriesToSortBy.SexToShow) || '';\n  const centuries = searchParams.getAll(CategoriesToSortBy.Centuries) || [];\n  const sortBy = searchParams.get(CategoriesToSortBy.sortBy) || '';\n  const sortOrder = searchParams.get(CategoriesToSortBy.sortOrder) || '';\n\n  useEffect(() => {\n    getPeople().then((res) => {\n      setPeople(res);\n    }).catch((error) => {\n      setIsError(error);\n    });\n  }, []);\n\n  const filteredPeople = useFilters(\n    ShowAllMaleF === 'm' || ShowAllMaleF === 'f' ? ShowAllMaleF : null,\n    query,\n    centuries,\n    sortBy,\n    sortOrder,\n    people || undefined,\n  );\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">People Page</h1>\n\n        <div className=\"block\">\n          <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n            <div className=\"column is-7-tablet is-narrow-desktop\">\n              {people && (<PeopleFilters />)}\n            </div>\n\n            <div className=\"column\">\n              <div className=\"box table-container\">\n                {(!people) && (<Loader />)}\n\n                {(isError) && (\n                  <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                    Something went wrong\n                  </p>\n                )}\n\n                {(people?.length === 0) && (\n                  <p data-cy=\"noPeopleMessage\">\n                    There are no people on the server\n                  </p>\n                )}\n\n                {(filteredPeople?.length === 0) && (people?.length !== 0) && (\n                  <p className=\"has-text-danger\">\n                    There are no people matching the current search criteria\n                  </p>\n                )}\n                {people && (\n                  <PeopleTable people={filteredPeople} />\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","export const Home = () => {\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Home Page</h1>\n      </div>\n    </main>\n  );\n};\n","export const NotFound = () => {\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Page not found</h1>\n      </div>\n    </main>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\nimport { People } from './components/PeoplePage';\nimport './App.scss';\nimport { Home } from './components/Home';\nimport { NotFound } from './components/PageNotFound';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n    <Routes>\n      <Route path=\"/\">\n        <Route path=\"/people\">\n          <Route index element={<People />} />\n          <Route path=\":personId\" element={<People />} />\n        </Route>\n        <Route index element={<Home />} />\n        <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"*\" element={<NotFound />} />\n      </Route>\n    </Routes>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}